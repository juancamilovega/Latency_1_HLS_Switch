#create a project and set the AXIS_switch function as the top level function
open_project switch_Lat1
set_top AXIS_switch
#we will read our parameters from Namefile.txt and ClockPeriod.txt which are
#created by file_preparation.py
set infile [open "Namefile.txt" r]
set name_append [gets $infile]
close $infile
set infile2 [open "ClockPeriod.txt" r]
set clock_period [gets $infile2]
close $infile2
set infile3 [open "FPGAVersion.txt" r]
set part_number [gets $infile3]
close $infile3
set infile4 [open "Resetfile.txt" r]
set reset_type [gets $infile4]
close $infile4
add_files switch.cpp
#switch.h is created by file_preparation.py and contains the define statements
#which are the parameters for switch.cpp based on the questionaire
add_files switch.h
open_solution "solution1"
set_part "$part_number" -tool vivado
#the clock period is 10ns in iteration 1 and becomes tighter in iteration 2/3
#This forces vivado_hls to try harder to improve the clock frequency
create_clock -period $clock_period
#The name prefix is a unique prefix generated by the parameters to prevent
#name conflicts in vivado
config_rtl -reset all -reset_level $reset_type -prefix $name_append
#synthesize and export the design
csynth_design
export_design -rtl verilog
